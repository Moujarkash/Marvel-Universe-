import com.mod.marveluniverse.data.dtos.ComicsResourceListDto;
import com.mod.marveluniverse.data.dtos.EventsResourceListDto;
import com.mod.marveluniverse.data.dtos.ImageDto;
import com.mod.marveluniverse.data.dtos.SeriesResourceListDto;
import com.mod.marveluniverse.data.dtos.StoriesResourceListDto;
import com.mod.marveluniverse.data.dtos.UrlDto;
import com.mod.marveluniverse.domain.entites.ResourceType;
import kotlin.Int;
import kotlin.collections.List;
import kotlinx.datetime.LocalDateTime;

CREATE TABLE creatorResourceEntity(
    id INTEGER AS Int NOT NULL PRIMARY KEY AUTOINCREMENT,
    resourceType TEXT AS ResourceType NOT NULL,
    resourceId INTEGER AS Int NOT NULL,
    remoteId INTEGER AS Int NOT NULL,
    firstName TEXT NOT NULL,
    middleName TEXT NOT NULL,
    lastName TEXT NOT NULL,
    suffix TEXT NOT NULL,
    fullName TEXT NOT NULL,
    modified TEXT AS LocalDateTime NOT NULL,
    urls TEXT AS List<UrlDto> NOT NULL,
    thumbnail TEXT AS ImageDto NOT NULL,
    comics TEXT AS ComicsResourceListDto NOT NULL,
    series TEXT AS SeriesResourceListDto NOT NULL,
    stories TEXT AS StoriesResourceListDto NOT NULL,
    events TEXT AS EventsResourceListDto NOT NULL,

                UNIQUE(resourceType, resourceId, remoteId)

);

getCreatorsResourceByType:
SELECT  *
FROM creatorResourceEntity
WHERE resourceType == ? AND resourceId == ?;

insertCreatorResource:
INSERT OR REPLACE
INTO creatorResourceEntity(
    id,
    resourceType,
    resourceId,
    remoteId,
    firstName,
    middleName,
    lastName,
    suffix,
    fullName,
    modified,
    urls,
    thumbnail,
    comics,
    series,
    stories,
    events
)
VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

clearCreatorsResource:
DELETE
FROM creatorResourceEntity
WHERE resourceType == ? AND resourceId == ?;