import com.mod.marveluniverse.data.dtos.CharactersResourceListDto;
import com.mod.marveluniverse.data.dtos.ComicSummaryDto;
import com.mod.marveluniverse.data.dtos.ComicsResourceListDto;
import com.mod.marveluniverse.data.dtos.CreatorsResourceListDto;
import com.mod.marveluniverse.data.dtos.EventsResourceListDto;
import com.mod.marveluniverse.data.dtos.ImageDto;
import com.mod.marveluniverse.data.dtos.SeriesResourceListDto;
import com.mod.marveluniverse.domain.entites.ResourceType;
import kotlin.Int;
import kotlinx.datetime.LocalDateTime;

CREATE TABLE storyResourceEntity(
resourceType TEXT AS ResourceType NOT NULL,
    resourceId INTEGER AS Int NOT NULL,
     id INTEGER AS Int NOT NULL,
     title TEXT NOT NULL,
     description TEXT NOT NULL,
     type TEXT NOT NULL,
     modified TEXT AS LocalDateTime NOT NULL,
     thumbnail TEXT AS ImageDto NOT NULL,
     comics TEXT AS ComicsResourceListDto NOT NULL,
     series TEXT AS SeriesResourceListDto NOT NULL,
     events TEXT AS EventsResourceListDto NOT NULL,
     characters TEXT AS CharactersResourceListDto NOT NULL,
     creators TEXT AS CreatorsResourceListDto NOT NULL,
     originalIssue TEXT AS ComicSummaryDto,

             PRIMARY KEY (resourceType, resourceId, id)
);

getStoriesResourceByType:
SELECT  *
FROM storyResourceEntity
WHERE resourceType == ? AND resourceId == ?;

insertStoryResource:
INSERT OR REPLACE
INTO storyResourceEntity(
    resourceType,
    resourceId,
     id,
        title,
        description,
        type,
        modified,
        thumbnail,
        comics,
        series,
        events,
        characters,
        creators,
        originalIssue
)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

clearStoriesResource:
DELETE
FROM storyResourceEntity
WHERE resourceType == ? AND resourceId == ?;