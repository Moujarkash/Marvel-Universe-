import com.mod.marveluniverse.data.dtos.CharactersResourceListDto;
import com.mod.marveluniverse.data.dtos.ComicSummaryDto;
import com.mod.marveluniverse.data.dtos.ComicsResourceListDto;
import com.mod.marveluniverse.data.dtos.CreatorsResourceListDto;
import com.mod.marveluniverse.data.dtos.EventsResourceListDto;
import com.mod.marveluniverse.data.dtos.ImageDto;
import com.mod.marveluniverse.data.dtos.SeriesResourceListDto;
import kotlin.Int;
import kotlinx.datetime.LocalDateTime;

CREATE TABLE storyEntity(
     id INTEGER AS Int NOT NULL PRIMARY KEY AUTOINCREMENT,
      requestCode TEXT NOT NULL,
     remoteId INTEGER AS Int NOT NULL,
     title TEXT NOT NULL,
     description TEXT NOT NULL,
     type TEXT NOT NULL,
     modified TEXT AS LocalDateTime NOT NULL,
     thumbnail TEXT AS ImageDto NOT NULL,
     comics TEXT AS ComicsResourceListDto NOT NULL,
     series TEXT AS SeriesResourceListDto NOT NULL,
     events TEXT AS EventsResourceListDto NOT NULL,
     characters TEXT AS CharactersResourceListDto NOT NULL,
     creators TEXT AS CreatorsResourceListDto NOT NULL,
     originalIssue TEXT AS ComicSummaryDto
);

getStoryByRemoteId:
SELECT  *
FROM storyEntity
WHERE remoteId = ?;

getStoriesByRequestCode:
SELECT *
FROM storyEntity
WHERE requestCode = ?;

getStories:
SELECT *
FROM storyEntity;

insertStory:
INSERT OR REPLACE
INTO storyEntity(
    id,
    requestCode,
    remoteId,
    title,
    description,
    type,
    modified,
    thumbnail,
    comics,
    series,
    events,
    characters,
    creators,
    originalIssue
)
VALUES (?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

clearRequestStories:
DELETE FROM storyEntity
WHERE requestCode = ?;

clearStoriesByRemoteIdsAndRequestCode:
DELETE FROM storyEntity
WHERE remoteId IN ? AND requestCode = ?;