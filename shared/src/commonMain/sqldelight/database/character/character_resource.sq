import com.mod.marveluniverse.data.dtos.ComicsResourceListDto;
import com.mod.marveluniverse.data.dtos.EventsResourceListDto;
import com.mod.marveluniverse.data.dtos.ImageDto;
import com.mod.marveluniverse.data.dtos.SeriesResourceListDto;
import com.mod.marveluniverse.data.dtos.StoriesResourceListDto;
import com.mod.marveluniverse.data.dtos.UrlDto;
import com.mod.marveluniverse.domain.entites.ResourceType;
import kotlin.Int;
import kotlin.collections.List;
import kotlinx.datetime.LocalDateTime;

CREATE TABLE characterResourceEntity(
        id INTEGER AS Int NOT NULL PRIMARY KEY AUTOINCREMENT,
        resourceType TEXT AS ResourceType NOT NULL,
        resourceId INTEGER AS Int NOT NULL,
        remoteId INTEGER AS Int NOT NULL,
        name TEXT NOT NULL,
        description TEXT NOT NULL,
        modified TEXT AS LocalDateTime NOT NULL,
        urls TEXT AS List<UrlDto> NOT NULL,
        thumbnail TEXT AS ImageDto NOT NULL,
        comics TEXT AS ComicsResourceListDto NOT NULL,
        series TEXT AS SeriesResourceListDto NOT NULL,
        stories TEXT AS StoriesResourceListDto NOT NULL,
        events TEXT AS EventsResourceListDto NOT NULL,

                                UNIQUE(resourceType, resourceId, remoteId)
);

getCharactersResourceByType:
SELECT  *
FROM characterResourceEntity
WHERE resourceType == ? AND resourceId == ?;

insertCharacterResource:
INSERT OR REPLACE
INTO characterResourceEntity(
    id,
    resourceType,
    resourceId,
    remoteId,
    name,
    description,
    modified,
    urls,
    thumbnail,
    comics,
    series,
    stories,
    events
)
VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

clearCharactersResource:
DELETE
FROM characterResourceEntity
WHERE resourceType == ? AND resourceId == ?;